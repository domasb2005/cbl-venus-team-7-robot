#include <libpynq.h>
#include <iic.h>
#include <stdio.h>

/*
 * I2C Scanner for PYNQ
 * Scans addresses from 0x08 to 0x77 (7-bit addresses)
 * Adapted from Arduino I2C scanner for PYNQ platform
 */


int scan_address(void) {
    pynq_init();

    // Initialize I2C
    switchbox_set_pin(IO_AR_SCL, SWB_IIC0_SCL);
    switchbox_set_pin(IO_AR_SDA, SWB_IIC0_SDA);
    iic_init(IIC0);

    uint8_t start_address = 0x08;  // Start from 0x08 to avoid reserved addresses
    uint8_t end_address = 0x77;    // End at 0x77 (7-bit address range)
    uint8_t found_devices = 0;
    uint8_t dummy_data;

    printf("\nI2C Scanner ready!");
    printf("\nScanning I2C bus from 0x%02X to 0x%02X...\n\n", start_address, end_address);

    // Scan through all addresses
    for (uint8_t addr = start_address; addr <= end_address; addr++) {
        // Try to read from the device
        int result = iic_read_register(IIC0, addr, 0x00, &dummy_data, 1);
        
        printf("0x%02X: ", addr);
        if (result == 0) {
            printf("Device found!");
            found_devices++;
        } else {
            printf("--");
        }
        
        // New line every 8 addresses
        if ((addr + 1) % 8 == 0) {
            printf("\n");
        } else {
            printf("\t");
        }
    }

    printf("\nScan completed! Found %d devices.\n", found_devices);

    // Cleanup
    iic_destroy(IIC0);
    pynq_destroy();
    
    return EXIT_SUCCESS;
}